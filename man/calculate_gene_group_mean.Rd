% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy.R
\name{calculate_gene_group_mean}
\alias{calculate_gene_group_mean}
\title{Calculate Gene by Group Mean Counts}
\usage{
calculate_gene_group_mean(
  se_object,
  grouping_column,
  assay_name = NULL,
  log = TRUE
)
}
\arguments{
\item{se_object}{A SummarizedExperiment object.}

\item{grouping_column}{A character string specifying the name of the column
in the colData of the SummarizedExperiment object
to use for grouping.}

\item{assay_name}{An optional character string specifying the name of the
assay to use for calculating means (e.g., "counts", "cpm",
"tpm", "rpkm"). If not provided, the first assay available
in the SummarizedExperiment object will be used. You
can also specify \code{deseq2_norm} to get the size factor
normalized counts.}

\item{log}{Default TRUE, will log2(assay + 1) scale the data}
}
\value{
A tibble where rows are genes and columns are the unique groups
from the specified grouping_column, containing the mean values
for each gene within each group from the specified assay.
}
\description{
This function takes a SummarizedExperiment object, a column name from the
colData(object) for grouping, and an optional assay name as input.
It then calculates the mean expression (often counts) for each gene, grouped
by the unique values in the specified grouping column.
}
\details{
The function first validates the input SummarizedExperiment object and
the existence of the grouping column. It then extracts the specified assay
data and the grouping factor. For each gene, it computes the mean of its
values across samples belonging to the same group.
}
\examples{
# This example requires the 'SummarizedExperiment' package
if (requireNamespace("SummarizedExperiment", quietly = TRUE) &&
    requireNamespace("Matrix", quietly = TRUE)) {

  # Create a dummy SummarizedExperiment object for demonstration
  # Define assay data (e.g., counts, cpm)
  counts_data <- matrix(
    sample(1:100, 20 * 6, replace = TRUE),
    nrow = 20,
    ncol = 6,
    dimnames = list(paste0("Gene", 1:20), paste0("Sample", 1:6))
  )
  cpm_data <- matrix(
    round(runif(20 * 6, 0, 100), 2), # Dummy CPM values
    nrow = 20,
    ncol = 6,
    dimnames = list(paste0("Gene", 1:20), paste0("Sample", 1:6))
  )

  # Define colData
  col_data <- S4Vectors::DataFrame(
    Group = factor(c("A", "A", "B", "B", "C", "C")),
    Batch = factor(c("X", "Y", "X", "Y", "X", "Y")),
    row.names = paste0("Sample", 1:6)
  )

  # Create SummarizedExperiment object with multiple assays
  se <- SummarizedExperiment::SummarizedExperiment(
    assays = list(counts = counts_data, cpm = cpm_data),
    colData = col_data
  )

  # Calculate mean counts by 'Group' using the 'counts' assay (explicitly)
  mean_counts_by_group <- calculate_gene_group_mean(se, "Group", assay_name = "counts")
  print(mean_counts_by_group[1:5, ])

  # Calculate mean CPM by 'Batch' using the 'cpm' assay
  mean_cpm_by_batch <- calculate_gene_group_mean(se, "Batch", assay_name = "cpm")
  print(mean_cpm_by_batch[1:5, ])

  # Calculate mean using the first assay if assay_name is not specified
  mean_default_assay <- calculate_gene_group_mean(se, "Group")
  print(mean_default_assay[1:5, ])
}

}
